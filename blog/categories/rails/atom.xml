<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | jjasghar rants and ramblings]]></title>
  <link href="http://jjasghar.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://jjasghar.github.io/"/>
  <updated>2015-03-16T13:57:21-05:00</updated>
  <id>http://jjasghar.github.io/</id>
  <author>
    <name><![CDATA[JJ Asghar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Moving to capistrano version 3 from version 2 git submodules]]></title>
    <link href="http://jjasghar.github.io/blog/2014/06/04/moving-to-capistrano-version-3-from-version-2/"/>
    <updated>2014-06-04T17:13:43-05:00</updated>
    <id>http://jjasghar.github.io/blog/2014/06/04/moving-to-capistrano-version-3-from-version-2</id>
    <content type="html"><![CDATA[<p>I&rsquo;m in the process of moving from <a href="http://capistranorb.com/">capistrano</a> version 2
to capistrano version 3. This is a post of a nasty hiccup I had, hopefully it&rsquo;ll be
useful for someone else.</p>

<h2>git submodules</h2>

<p>I had a requirement to get git submodules to work with one of my applications. It&rsquo;s seems
that v3 doesn&rsquo;t have the &ldquo;clone&rdquo; version anymore, so the <code>.git</code> directory isn&rsquo;t there.
It seems it uses the <code>git archive</code> and doesn&rsquo;t have an &ldquo;out of the box&rdquo; support for submodules.
See <a href="http://stackoverflow.com/questions/19403138/capistrano-v3-deploy-git-repository-and-its-submodules/19573220#19573220">here</a>.
I did some searching and found the above stack overflow and  <a href="https://gist.github.com/jjasghar/d9369c60c51f79d6e7cc">this gist</a>
which gave me the bulk of what I needed to get done.</p>

<p>There were some gotchas on this so I&rsquo;m going to do my best to document them here.
First off, as you can see on <a href="https://gist.github.com/jjasghar/d9369c60c51f79d6e7cc#file-submodule_strategy-rb-L20">line 20</a>
there is a new variable named <code>repo_path</code>.  This is due to the need now of the
<code>git clone</code> to the file system and a place it needs to put it. So that means you need
to add the <code>repo/</code> directory in your <code>:deploy_to</code> directory. Might I suggest the something like:</p>

<p><code>bash
ssh &lt;deployuser&gt;@&lt;remotehost&gt;://var/www/&lt;app&gt;/repo/
</code></p>

<p>Then after the fact, you might want to steal this cap rake task:
```ruby
desc &ldquo;Check that we can access the repo directory&rdquo;
task :check_repo_permissions do
  on roles(:all) do |host|</p>

<pre><code>if test("[ -w #{fetch(:deploy_to)/repo} ]")
  info "#{fetch(:deploy_to)/repo} is writable on #{host}"
else
  error "#{fetch(:deploy_to)/repo} is not writable on #{host}"
end
</code></pre>

<p>  end
end
```</p>

<p>Also may I suggest you putting this at the &ldquo;top&rdquo; of your <code>deploy.rb</code> something like:
<code>ruby
before :deploy, :check_repo_permissions
</code>
So just in case you&rsquo;re <code>cap</code> task will fail out early on of you have decided to remove, or
do something with that repo directory.</p>

<p>Now if you go ahead and run <code>cap staging deploy</code> (you&rsquo;re testing in STAGING right?)
You might run into some errors. Most are pretty self explanatory, and if you take care of them
and run <code>cap</code> again, you should be good&hellip;but I digress.</p>

<p>After adding that repo directory, you want to add the above <a href="https://gist.github.com/jjasghar/d9369c60c51f79d6e7cc">gist</a> to <code>lib/capistrano/submodule_strategy.rb</code>
and add the following two lines to your <code>Capfile</code>:</p>

<p><code>ruby
require 'capistrano/git'
require './lib/capistrano/submodule_strategy'
</code></p>

<p>After that, you need to add to your <code>config/deploy.rb</code>:</p>

<p><code>ruby
set :git_strategy, SubmoduleStrategy
</code></p>

<p>This should wire everything up now.</p>

<p>There is one other <em>optional</em> file, <code>.capignore</code> that needs to be created, it is a <code>.gitignore</code> for this cap deployment.
I ended up taking the example:
<code>
.capignore
lib
config
.git
</code>
and adding it directory to the <code>(:deploy_to)/repo/.capignore</code>. I believe you can add it to your the root of your repo,
and it should get there too, but I didnt do it that way. The only place it&rsquo;s referanced is <a href="https://gist.github.com/jjasghar/d9369c60c51f79d6e7cc#file-submodule_strategy-rb-L45">here</a> so if you see fit, you could probably just remove the referance.</p>

<p>You should be able to do a <code>cap staging deploy</code> now and you should notice something like:
<code>bash
...
DEBUG[639d0d29] Command: cd /var/www/app/repo &amp;&amp; ( GIT_ASKPASS=/bin/echo GIT_SSH=/tmp/app/git-ssh.sh /usr/bin/env git submodule update --init )
DEBUG[639d0d29]   Submodule 'i-hate-submodules' () registered for path 'i-hate-submodules'
...
</code></p>

<p>And you should be good to go!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating a rails password via the rails console]]></title>
    <link href="http://jjasghar.github.io/blog/2014/05/02/updating-a-rails-password-via-the-rails-console/"/>
    <updated>2014-05-02T11:28:40-05:00</updated>
    <id>http://jjasghar.github.io/blog/2014/05/02/updating-a-rails-password-via-the-rails-console</id>
    <content type="html"><![CDATA[<p>I&rsquo;m in the process of learning <a href="http://www.railstutorial.org/">ruby on rails</a> and it&rsquo;s going amazingly, plus <a href="http://michaelhartl.com/">Michael Hartl</a> as a great teacher, I strongly suggest
going through his screencasts.</p>

<p>As I was watching his screencasts, I forgot one of my test passwords and realized I didn&rsquo;t have a quick way to redo the password. There is a simple handful of commands fix this:</p>

<p><code>ruby
irb(main):001:0&gt; u = User.find_by_id(1)
  User Load (3.5ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 1 LIMIT 1
=&gt; #&lt;User id: 1, name: "JJ Asghar", email: "jjasghar@gmail.com", created_at: "2014-04-18 17:46:48", updated_at: "2014-04-25 23:21:10", password_digest: "$2a$10$or/wJw1I8Wpf0lXNbtawveoQXETGJbUkv/VwXQXzn92r...", remember_token: "uUJTExCyt4mpAOpQWd4PMA"&gt;
irb(main):002:0&gt; u
=&gt; #&lt;User id: 1, name: "JJ Asghar", email: "jjasghar@gmail.com", created_at: "2014-04-18 17:46:48", updated_at: "2014-04-25 23:21:10", password_digest: "$2a$10$or/wJw1I8Wpf0lXNbtawveoQXETGJbUkv/VwXQXzn92r...", remember_token: "uUJTExCyt4mpAOpQWd4PMA"&gt;
irb(main):003:0&gt; u.password = "a_stupid_pa$$word"
=&gt; "_stupid_pa$$word"
irb(main):004:0&gt; u.password_confirmation = "a_stupid_pa$$word"
=&gt; "_stupid_pa$$word"
irb(main):005:0&gt; u.save
   (2.0ms)  BEGIN
  User Exists (12.2ms)  SELECT 1 AS one FROM "users" WHERE (LOWER("users"."email") = LOWER('jjasghar@gmail.com') AND "users"."id" != 1) LIMIT 1
   (15.8ms)  UPDATE "users" SET "password_digest" = '$2a$10$Za7prnrSthhE90AvB15BNOMl8sf3oL7onBpZ45nH/9skwHfn1EFA.', "remember_token" = 'zOZYjEVovO143qrX1yhibw', "updated_at" = '2014-04-25 23:24:39.329502' WHERE "users"."id" = 1
   (4.6ms)  COMMIT
=&gt; true
irb(main):006:0&gt;
</code></p>

<p>As you can see, you need to create an object via a <code>find_by_&lt;something&gt;</code>, in my case <code>id</code> and write it to <code>u</code>. After that I change the password key to <code>a_stupid_pa$$word</code> along with the password_confirmation. I then write it to the
database via <code>u.save</code>.</p>

<p>You can also do this for anything that the object has, you just have to make sure that you follow the constraints you put in place. If you see an issue with the save, if it comes back as <code>false</code>, put a <code>!</code> at the end and it should bubble up the
exception telling you why it won&rsquo;t work, example:</p>

<p><code>ruby
[1] pry(main)&gt; u = User.find_by_id(1)
  User Load (0.1ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 1 LIMIT 1
=&gt; #&lt;User id: 1, name: "JJ Asghar", email: "jjasghar@gmail.com", created_at: "2014-04-18 17:12:49", updated_at: "2014-04-24 20:17:57", password_digest: "$2a$10$GeLuTvSL4giPYJWIozdj6e1UxrxM0NauI9ilXoB9pZDs...", remember_token: "ZiAb_plRQdp9WaKjbZ4CAA"&gt;
[2] pry(main)&gt; u.password = "1234"
=&gt; "1234"
[3] pry(main)&gt; u.save
   (0.1ms)  begin transaction
  User Exists (0.1ms)  SELECT 1 AS one FROM "users" WHERE (LOWER("users"."email") = LOWER('jjasghar@gmail.com') AND "users"."id" != 1) LIMIT 1
   (0.1ms)  rollback transaction
=&gt; false
[4] pry(main)&gt; u.save!
   (0.1ms)  begin transaction
  User Exists (0.1ms)  SELECT 1 AS one FROM "users" WHERE (LOWER("users"."email") = LOWER('jjasghar@gmail.com') AND "users"."id" != 1) LIMIT 1
   (0.0ms)  rollback transaction
ActiveRecord::RecordInvalid: Validation failed: Password is too short (minimum is 6 characters), Password confirmation can't be blank
from /Users/jasghar/.rvm/gems/ruby-2.0.0-p195/gems/activerecord-3.2.16/lib/active_record/validations.rb:56:in `save!'
[5] pry(main)&gt;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to add growl notifications to rspec tests]]></title>
    <link href="http://jjasghar.github.io/blog/2014/04/08/how-to-add-growl-notifications-to-rspec-tests/"/>
    <updated>2014-04-08T10:45:59-05:00</updated>
    <id>http://jjasghar.github.io/blog/2014/04/08/how-to-add-growl-notifications-to-rspec-tests</id>
    <content type="html"><![CDATA[<p>With some pushing from my work I&rsquo;ve decided to start learning rails, with rails comes TDD.
I&rsquo;m reading some books and watching some screencasts, and rspec testing came up as the default testing way.  I&rsquo;m a
huge <a href="http://kitchen.ci">test-kitchen</a>, or <a href="https://github.com/sstephenson/bats">bats</a> or the like tester with chef
but never got a way to automate the testing in the background. Turns out using rspec+guard+growl allows for you to
be focused on your present screen and have the tests being run with a pop up.</p>

<p>I use vim as my development platform. This is why I needed a way to run rspec in the background, hopping out of the vim buffer breaks my focus. So I used guard-rspec, it was perfect for what I wanted to do, problem was it was in another tab or terminal again breaking my focus. I figured I have growl installed, so this is how I set up this perfect rspec+guard+growl setup.</p>

<p>First add these two gems to your Gemfile:
```ruby
group :development, :test do</p>

<pre><code>gem ...
gem 'growl'
gem 'growl_notify'
</code></pre>

<p>end
```</p>

<p>NOTE: I suggest adding this to the development/test group, you won&rsquo;t want this in your production deploy.</p>

<p>Go ahead and run <code>bundle</code>.</p>

<p>After that, you need to install something called <a href="http://growl.cachefly.net/GrowlNotify-2.1.zip">GrowlNotify 2.1</a>, I&rsquo;d double check your growl version, it only works with 2.1.x.</p>

<p>After installing spin up <code>guard</code>, and you should see a nice notification. :)</p>
]]></content>
  </entry>
  
</feed>
