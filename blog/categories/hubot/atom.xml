<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hubot | jjasghar rants and ramblings]]></title>
  <link href="http://jjasghar.github.io/blog/categories/hubot/atom.xml" rel="self"/>
  <link href="http://jjasghar.github.io/"/>
  <updated>2014-02-20T17:47:59-06:00</updated>
  <id>http://jjasghar.github.io/</id>
  <author>
    <name><![CDATA[JJ Asghar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting authentication with hubot using auth.coffee]]></title>
    <link href="http://jjasghar.github.io/blog/2014/02/19/getting-authentication-with-hubot-using-auth-dot-coffee/"/>
    <updated>2014-02-19T11:07:03-06:00</updated>
    <id>http://jjasghar.github.io/blog/2014/02/19/getting-authentication-with-hubot-using-auth-dot-coffee</id>
    <content type="html"><![CDATA[<p>So you want to add some authentication to hubot eh? Great, this post should walk you through the majority of it.
First thing first, set up <a href="https://github.com/github/hubot-scripts/blob/master/src/scripts/auth.coffee">auth.coffee</a>, by this
that means you need to figure out &ldquo;HUBOT_AUTH_ADMIN&rdquo;. Assuming you have hubot already connecting to a site, run <code>hubot show users</code>
and he should come back with all the people he knows about. Grab the id number for the person/people you want to have admin rights.</p>

<p>Add <code>HUBOT_AUTH_ADMIN="&lt;number&gt;,&lt;nextnumber&gt;"</code> to the <code>bin/hubot</code> or however you add variables to him, go ahead and restart hubot to
see if he now thinks you&rsquo;re and admin.</p>

<p>If all goes well, you should see something like this:
<code>
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles:  and is also an admin.
Hubot&gt;
</code></p>

<p>Great! Lets give shell our first role. I&rsquo;m going to hack the <a href="https://github.com/github/hubot/blob/master/src/scripts/ping.coffee">ping.coffee</a>
as the example, so lets give our user the first role:</p>

<p><code>
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles:  and is also an admin.
Hubot&gt; Hubot shell has ping role
Hubot&gt; Shell: Ok, shell has the 'ping' role.
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles: ping and is also an admin.
Hubot&gt;
</code></p>

<p>As you can see <code>shell</code> only has the admin role like expected. Then I gave <code>shell</code> the ping role, and checked it. Great. Ok, lets remove ping for now, so we
can change the <a href="https://github.com/github/hubot/blob/master/src/scripts/ping.coffee">ping.coffee</a>, to fail for us.</p>

<p><code>
Hubot&gt; Hubot shell doesn't have ping role
Hubot&gt; Shell: Ok, shell doesn't have the 'ping' role.
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles:  and is also an admin.
Hubot&gt;
</code></p>

<p>Go ahead into your <code>scripts/</code> directory, and open up your ping.coffee. Take a look at the following snippet:</p>

<p>```
module.exports = (robot) &ndash;>
  robot.respond /PING$/i, (msg) &ndash;></p>

<pre><code>msg.send "PONG"
</code></pre>

<p>```</p>

<p>Pretty straight forward eh? Go ahead and tack on this:</p>

<p>```
module.exports = (robot) &ndash;>
  robot.respond /PING$/i, (msg) &ndash;></p>

<pre><code>if robot.auth.hasRole(msg.envelope.user, "ping")
  msg.send "PONG"
else
 msg.send "Sorry you can't ask me to PONG"
</code></pre>

<p>```</p>

<p>Note: a quick explanation, if hubot responds to &ldquo;ping&rdquo; case insensitive, it&rsquo;ll respond with the &ldquo;PONG&rdquo; only if you have the role of ping.</p>

<p>Go and ahead and restart hubot, and say PING. :)</p>

<p><code>
Hubot&gt; hubot PING
Hubot&gt; Sorry you can't ask me to PONG
</code></p>

<p>Sweet!</p>

<p>Ok, next step, lets give ourselves access to make this happen:</p>

<p><code>
Hubot&gt; Hubot shell has ping role
Hubot&gt; Shell: Ok, shell has the 'ping' role.
Hubot&gt; hubot PING
Hubot&gt; PONG
Hubot&gt;
</code></p>

<p>PERFECT!</p>

<p>So, we now can wrap certain hubot scripts for certain people. But there&rsquo;s a disappointing portion of this; in order to enforce the commands you&rsquo;ll need
to have the scripts with <code>robot.auth.hasRole(msg.envelope.user, "&lt;role&gt;")</code>, this means you&rsquo;ll have to fork the script you want to leverage and dump it in
your <code>scripts/</code> directory, and removed from your <code>hubot-scripts.json</code> and <code>external-scripts.json</code>.</p>

<p>This will probably get annoying as the scripts get updated and new features are added, but until I figure out a better way I think we&rsquo;re stuck here.</p>
]]></content>
  </entry>
  
</feed>
