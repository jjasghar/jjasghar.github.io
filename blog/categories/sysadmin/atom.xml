<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sysadmin | jjasghar rants and ramblings]]></title>
  <link href="http://jjasghar.github.io/blog/categories/sysadmin/atom.xml" rel="self"/>
  <link href="http://jjasghar.github.io/"/>
  <updated>2014-02-20T17:46:50-06:00</updated>
  <id>http://jjasghar.github.io/</id>
  <author>
    <name><![CDATA[JJ Asghar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting authentication with hubot using auth.coffee]]></title>
    <link href="http://jjasghar.github.io/blog/2014/02/19/getting-authentication-with-hubot-using-auth-dot-coffee/"/>
    <updated>2014-02-19T11:07:03-06:00</updated>
    <id>http://jjasghar.github.io/blog/2014/02/19/getting-authentication-with-hubot-using-auth-dot-coffee</id>
    <content type="html"><![CDATA[<p>So you want to add some authentication to hubot eh? Great, this post should walk you through the majority of it.
First thing first, set up <a href="https://github.com/github/hubot-scripts/blob/master/src/scripts/auth.coffee">auth.coffee</a>, by this
that means you need to figure out &ldquo;HUBOT_AUTH_ADMIN&rdquo;. Assuming you have hubot already connecting to a site, run <code>hubot show users</code>
and he should come back with all the people he knows about. Grab the id number for the person/people you want to have admin rights.</p>

<p>Add <code>HUBOT_AUTH_ADMIN="&lt;number&gt;,&lt;nextnumber&gt;"</code> to the <code>bin/hubot</code> or however you add variables to him, go ahead and restart hubot to
see if he now thinks you&rsquo;re and admin.</p>

<p>If all goes well, you should see something like this:
<code>
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles:  and is also an admin.
Hubot&gt;
</code></p>

<p>Great! Lets give shell our first role. I&rsquo;m going to hack the <a href="https://github.com/github/hubot/blob/master/src/scripts/ping.coffee">ping.coffee</a>
as the example, so lets give our user the first role:</p>

<p><code>
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles:  and is also an admin.
Hubot&gt; Hubot shell has ping role
Hubot&gt; Shell: Ok, shell has the 'ping' role.
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles: ping and is also an admin.
Hubot&gt;
</code></p>

<p>As you can see <code>shell</code> only has the admin role like expected. Then I gave <code>shell</code> the ping role, and checked it. Great. Ok, lets remove ping for now, so we
can change the <a href="https://github.com/github/hubot/blob/master/src/scripts/ping.coffee">ping.coffee</a>, to fail for us.</p>

<p><code>
Hubot&gt; Hubot shell doesn't have ping role
Hubot&gt; Shell: Ok, shell doesn't have the 'ping' role.
Hubot&gt; Hubot what role does shell have
Hubot&gt; Shell: shell has the following roles:  and is also an admin.
Hubot&gt;
</code></p>

<p>Go ahead into your <code>scripts/</code> directory, and open up your ping.coffee. Take a look at the following snippet:</p>

<p>```
module.exports = (robot) &ndash;>
  robot.respond /PING$/i, (msg) &ndash;></p>

<pre><code>msg.send "PONG"
</code></pre>

<p>```</p>

<p>Pretty straight forward eh? Go ahead and tack on this:</p>

<p>```coffee
module.exports = (robot) &ndash;>
  robot.respond /PING$/i, (msg) &ndash;></p>

<pre><code>if robot.auth.hasRole(msg.envelope.user, "ping")
  msg.send "PONG"
else
 msg.send "Sorry you can't ask me to PONG"
</code></pre>

<p>```</p>

<p>Note: a quick explanation, if hubot responds to &ldquo;ping&rdquo; case insensitive, it&rsquo;ll respond with the &ldquo;PONG&rdquo; only if you have the role of ping.</p>

<p>Go and ahead and restart hubot, and say PING. :)</p>

<p><code>
Hubot&gt; hubot PING
Hubot&gt; Sorry you can't ask me to PONG
</code></p>

<p>Sweet!</p>

<p>Ok, next step, lets give ourselves access to make this happen:</p>

<p><code>
Hubot&gt; Hubot shell has ping role
Hubot&gt; Shell: Ok, shell has the 'ping' role.
Hubot&gt; hubot PING
Hubot&gt; PONG
Hubot&gt;
</code></p>

<p>PERFECT!</p>

<p>So, we now can wrap certain hubot scripts for certain people. But there&rsquo;s a disappointing portion of this; in order to enforce the commands you&rsquo;ll need
to have the scripts with <code>robot.auth.hasRole(msg.envelope.user, "&lt;role&gt;")</code>, this means you&rsquo;ll have to fork the script you want to leverage and dump it in
your <code>scripts/</code> directory, and removed from your <code>hubot-scripts.json</code> and <code>external-scripts.json</code>.</p>

<p>This will probably get annoying as the scripts get updated and new features are added, but until I figure out a better way I think we&rsquo;re stuck here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.kitchen.local.yml and when you want to use it]]></title>
    <link href="http://jjasghar.github.io/blog/2014/02/17/dot-kitchen-dot-local-dot-yml-and-when-you-want-to-use-it/"/>
    <updated>2014-02-17T15:32:20-06:00</updated>
    <id>http://jjasghar.github.io/blog/2014/02/17/dot-kitchen-dot-local-dot-yml-and-when-you-want-to-use-it</id>
    <content type="html"><![CDATA[<p>I recently bought the vagrant <a href="http://www.vagrantup.com/vmware">vmware fusion</a> plugin to start testing out <a href="https://gist.github.com/fnichol/8609348">test-kitchen for mac</a>. Good ol' <a href="https://twitter.com/fnichol">Fletcher</a>
made it ridiculously easy to do and I thank him for that.  Interestingly enough though in the process of figuring it out I ran into a problem.  I have a few other <code>.kitchen.yml</code> files in different
cookbooks, and I wanted to start leveraging what I just paid for.</p>

<p>So take this <code>.kitchen.yml</code> for instance:</p>

<h2>```</h2>

<p>driver:
  name: vagrant</p>

<p>provisioner:
  name: chef_solo</p>

<p>platforms:
  &ndash; name: ubuntu-12.04</p>

<p>suites:
  &ndash; name: default</p>

<pre><code>run_list:
  - recipe[hubot-solo::default]
attributes:
</code></pre>

<p>```</p>

<p>Yep, it runs off the default of virtualbox.  If you create a <code>.kitchen.local.yml</code> file in that directory, something like this:</p>

<h2>```</h2>

<p>driver:
  name: vagrant
  provider: vmware_fusion</p>

<p>provisioner:
  name: chef_solo</p>

<p>platforms:
  &ndash; name: ubuntu-12.04</p>

<p>suites:
  &ndash; name: default</p>

<pre><code>run_list:
  - recipe[hubot-solo::default]
attributes:
</code></pre>

<p>```</p>

<p>It&rsquo;ll run it with vmare as the hypervisor or provider, in kitchen lingo.</p>

<p>That&rsquo;s all fine and dandy, but what about an over arching config? I thought you could create something like <code>~/.kitchen.local.yml</code> that didn&rsquo;t seem to work.</p>

<p>I pinged <a href="https://webchat.freenode.net/?channels=%23kitchenci">#kitchenci</a> and <strong>teukka</strong> gave me
the answer: set/export <code>VAGRANT_DEFAULT_PROVIDER=vmware_fusion</code> env var (in your shell&rsquo;s rc file), and boom, it worked.</p>

<p>So, long story short: if you want to have a specific change that overrides the default <code>.kitchen.yml</code> make a <code>.kitchen.local.yml</code> in the directory,
but if you want to override every hypervisor use <code>export VAGRANT_DEFAULT_PROVIDER=vmware_fusion</code> in your bashrc/zshrc.</p>

<p>I hope this helps someone making the conversion from virtualbox to vmware.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[docker packer VM oh my]]></title>
    <link href="http://jjasghar.github.io/blog/2014/02/13/docker-packer-vm-oh-my/"/>
    <updated>2014-02-13T12:17:09-06:00</updated>
    <id>http://jjasghar.github.io/blog/2014/02/13/docker-packer-vm-oh-my</id>
    <content type="html"><![CDATA[<p>So I&rsquo;ve been caught up in the <a href="http://docker.io">docker</a>, <a href="http://packer.io">packer</a>, and VM discussion a handful of times. I&rsquo;ve been defending and discussing<em>cough</em>attacking<em>cough</em> different
versions and use cases. Then something happened, something I thought docker is wasn&rsquo;t what it was, and something I thought packer was isn&rsquo;t what it is. Welp, there&rsquo;s some egg on my face eh?
So here&rsquo;s a cheatsheet type post about the difference and <strong>POSSIBLE</strong> use cases.</p>

<h3>docker</h3>

<p>As the docker says in their <a href="http://www.slideshare.net/dotCloud/docker-intro-november">intro slide deck</a>, it&rsquo;s designed to &ldquo;ship code.&rdquo; This is important distinction between this and what a VM does.
docker is a soupedâ€“up version of <a href="http://linuxcontainers.org/">lxc</a> or to a lesser extent <a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/jails.html">freebsd jails</a>. It allows you to
run an application in it&rsquo;s own little bubble, but has a <em>shared</em> underlying OS/kernel. (in this case linux) It allows for a quick provisioning of an application disposable and transient applications
which is great for development work. You can spin up a &ldquo;base&rdquo; build extremely quickly and hack away and it and rollback to a know good spot, without having to reimage/build the machine. In the new <a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a>
world this is great for iterations. I guess a good simile is like you have a pad of paper with a base story printed on each page, you tack on the writing you want at the bottom, and if you don&rsquo;t like it just tear it
away and start again.</p>

<h3>VM</h3>

<p>So docker is designed for an application? Isn&rsquo;t that what a VM is designed for? Not exactly. docker shares the kernel and base os, while a VM is it&rsquo;s own entity. VMs also require a hypervisor of some type
that sits on another os; so if you can imagine it, VM = os ontop of hypervisor (that controls the VMs) on top of another os. This has it&rsquo;s merits, but at the same time it can be cumbersome, for development. It seems
VMs use case, compared to something like docker, is more for production deployments, more static content that updates through a deployment system.  This can bring in security uses and the like, keep that in mind.</p>

<h3>packer</h3>

<p>packer in a couple words is this: a way to create base or gold VM images. It&rsquo;s designed to create a typical/transferable VM image that works with multiple platforms and hypervisors. An example, you have a beloved mail server, you create
an image of this box, but you&rsquo;re boss now says you&rsquo;re moving cloud providers and  have to get it working on <a href="http://digitalocean.com/">digital ocean</a>. packer makes that conversion &ldquo;simple,&rdquo; which packs up the image to be portable and transferable.
I say simple mainly because honestly I haven&rsquo;t tried it yet, but I have watched a few youtube tutorials on it.</p>

<p>This post is spurred from my miss understanding of the scope of docker and VMs, and in the process of groking them, rediscovering packer.</p>

<p>So in a nutshell: docker is a wrapper for lxc/jails for linux running an app sharing a common kernel, VMs are separate entities and kernels that more production focused, and packer is a way to create transferable VMs between hypervisors.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chef handler why did it take a year for me to use you]]></title>
    <link href="http://jjasghar.github.io/blog/2014/02/07/chef-handler-why-did-it-take-a-year-for-me-to-use-you/"/>
    <updated>2014-02-07T15:24:54-06:00</updated>
    <id>http://jjasghar.github.io/blog/2014/02/07/chef-handler-why-did-it-take-a-year-for-me-to-use-you</id>
    <content type="html"><![CDATA[<p>Something that I never seemed to grok was <a href="http://docs.opscode.com/essentials_handlers.html">chef handlers</a>. I read that site like 50 times, got the jist, but never fully understood them.</p>

<p>Then I learned it in a nutshell: you know when you run <code>chef-client</code> or <code>chef-solo</code> and that error that pops up? A handler can export it to another location so you can have a centralized stream of information.</p>

<p>This isn&rsquo;t just limited to error reporting, you can report a bunch of stuff, but errors are something that admins should visualize ASAP.</p>

<p>This is AMAZINGLY useful if you have more than a couple nodes. Lets say you have 100-200ish nodes (like me) and you decided that you wanted to run <code>knife ssh 'chef_environment:staging' 'sudo chef-client'</code>.</p>

<p>Awesome, so it kicks off, you have a few changes but you had a typo in your <code>role[db_slave]</code>. Well, if you&rsquo;ve ever used <code>knife ssh</code> before you&rsquo;ll know that it streams everything real-time
and you&rsquo;ll probably miss the nasty red text that says you have an error. If you have your handler; it takes it says &ldquo;Hey error here, lets push it up to [email|campfire|growl|hipchat|etc]&rdquo; and boom everyone knows that
there&rsquo;s a problem with the converge. If you are lucky enough to have a regular checkin with the chef-server you&rsquo;ll get the error pop up each run till you have it fixed. Annoying yes, but it makes sure you have all you machines
in a good state.</p>

<p>If this has peaked your interest, there is a cookbook called <a href="https://github.com/opscode-cookbooks/chef_handler">chef_handler</a> that does most if not all of your heavy lifting. It leverages an LWRP that needs to be close if not the first in your <code>run_list</code>.</p>

<p>Here&rsquo;s an example for <a href="https://github.com/kisoku/chef-handler-mail">chef-handler-mail</a>:</p>

<p>```ruby
chef_gem &ldquo;chef-handler-mail&rdquo;
gem &ldquo;chef-handler-mail&rdquo;</p>

<p>chef_handler &ldquo;MailHandler&rdquo; do
   source &lsquo;chef/handler/mail&rsquo;
   arguments :to_address => &ldquo;root&rdquo;
   action :nothing
end.run_action(:enable)
```
As you can see it&rsquo;s pretty straight forward.</p>

<p>My company uses <a href="http://campfirenow.com/">campfire</a> and there&rsquo;s a <a href="https://github.com/ampledata/chef-handler-campfire">chef-handler-campfire</a> gem for it. The LWRP stanza that you put in your recipe requires something to this effect, I put this in the
first main internal recipe:</p>

<p>```ruby
include_recipe &lsquo;chef_handler&rsquo;</p>

<p>chef_gem &ldquo;chef-handler-campfire&rdquo; do
  action :install
end</p>

<p>chef_handler &lsquo;Chef::Handler::Campfire&rsquo; do
  action :enable
  arguments [ &lsquo;SUBDOMAIN&rsquo;, &lsquo;TOKEN&rsquo; , &lsquo;ROOM&rsquo; ]
  source File.join(Gem.all_load_paths.grep(/chef-handler-campfire/).first,</p>

<pre><code>               'chef', 'handler', 'campfire.rb')
</code></pre>

<p>end
```</p>

<p>Note: Unfortunately the newest <a href="https://github.com/collectiveidea/tinder">tinder</a> requires <code>json ~&gt; '1.8.0'</code> and chef <code>11.8.2</code> requires <code>json ~&gt; '1.7.7'</code>.  Last night (2014-02-06) chef <a href="http://www.getchef.com/blog/2014/02/06/chef-client-11-10-0-release/">released 11.10</a> which fixes this, the embedded chef binary now uses 1.8.0. I have a <a href="https://github.com/ampledata/chef-handler-campfire/pull/2">PR</a> to fix up the README.</p>

<p>There&rsquo;s a lot more to handlers, but for now this is huge win for me, I&rsquo;ll post more as I start learning the reporting side of it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ResourceNotFound and splunk> fun...gotta love that error]]></title>
    <link href="http://jjasghar.github.io/blog/2014/02/03/resourcenotfound-and-splunk%3E-fun-dot-dot-dot-gotta-love-that-error/"/>
    <updated>2014-02-03T16:18:51-06:00</updated>
    <id>http://jjasghar.github.io/blog/2014/02/03/resourcenotfound-and-splunk>-fun-dot-dot-dot-gotta-love-that-error</id>
    <content type="html"><![CDATA[<p>My company uses <a href="http://splunk.com">splunk</a> yes yes, I know, I should be using <a href="https://github.com/rashidkpc/Kibana">kibana</a> and <a href="http://logstash.net/">logstash</a> but I got the budget for splunk> so I&rsquo;m using splunk.</p>

<p>I attempted to install an updated license the other day and got an interesting error after restarting splunk and attempting to log in:
```
500 Internal Server Error</p>

<p>Return to Splunk home page</p>

<p>ResourceNotFound: [HTTP 404] <a href="https://127.0.0.1:8089/services/data/user-prefs;">https://127.0.0.1:8089/services/data/user-prefs;</a> [{&lsquo;type&rsquo;: &lsquo;ERROR&rsquo;, &lsquo;text&rsquo;: &lsquo;Application does not exist: user-prefs&rsquo;, &lsquo;code&rsquo;: None}]</p>

<p>This page was linked to from <a href="http://">http://</a><mycompanyname>:8000/en-US/account/login?return_to=%2Fen-US%2F.</p>

<p>You are using <mycompanyname>:8000, which is connected to splunkd @182037 at <a href="https://127.0.0.1:8089">https://127.0.0.1:8089</a> on Mon Feb 3 16:17:37 2014.
```</p>

<p>Wow, what the hell does that mean?</p>

<p>So after some investigation it seems that I had my <code>/opt/splunk/bin/splunk</code> symlinked to <code>/opt/splunkforwarder/bin/splunk</code>. After some finagling with splunk support it seems it was a complete
oversight.</p>

<p>Having both the <code>splunkforwarder</code> and <code>splunk</code> on the same box can be dangerous, if you do you&rsquo;ll have to edit the ports that they use. Keep that in mind if you decide to go down this path.</p>
]]></content>
  </entry>
  
</feed>
